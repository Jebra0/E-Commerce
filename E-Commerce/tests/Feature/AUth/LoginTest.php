<?php

namespace Tests\Feature\AUth;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Hash;
use Tests\TestCase;

class LoginTest extends TestCase
{

    public $user ;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $password = 'password';

        $this->user = User::factory()->create([
            'email' => 'mohammed@gmail.com',
            'password' => Hash::make($password),
        ]);

        // for test the wrong email
        User::factory()->create([
            'email' => 'WRONG@gmail.com',
            'password' => Hash::make('WRONG_password'),
        ]);
    }

    use RefreshDatabase;
    public function test_user_can_login_with_email_and_password(): void
    {
        $response = $this->postJson(route('user.login'), [
            'email' => $this->user->email,
            'password' => 'password'
        ])->assertOk();

        $this->assertArrayHasKey('token', $response->json());
    }

    public function test_user_can_NOT_login_with_wrong_email(): void
    {
        $this->postJson(route('user.login'), [
            'email' => 'WRONG@gmail.com',
            'password' => 'password'
        ])->assertUnauthorized();
    }

    public function test_user_can_NOT_login_with_wrong_password(): void
    {
        $this->postJson(route('user.login'), [
            'email' => $this->user->email,
            'password' => 'WRONG_password'
        ])->assertUnauthorized();
    }
}
